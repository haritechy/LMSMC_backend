// models/course.js
const { DataTypes } = require("sequelize");
const sequelize = require("../config/db");
const CoursePriceOption = require("./courseOptionModel");

const Course = sequelize.define("Course", {
Â  title: DataTypes.STRING,
Â  description: DataTypes.TEXT,
Â  thumbnail: DataTypes.STRING,
Â  basePrice: {
Â  Â  type: DataTypes.INTEGER,
Â  Â  allowNull: true,
Â  Â  defaultValue: 0, Â 
Â  },
Â  rating: {
Â  Â  type: DataTypes.FLOAT,
Â  Â  defaultValue: 0.0,
Â  },
Â  duration: DataTypes.INTEGER, // total duration of all classes in minutes
Â  // ðŸ›‘ ADDED THIS MISSING COLUMN ðŸ›‘
Â  totalClasses: { 
Â  Â  type: DataTypes.INTEGER,
Â  Â  allowNull: false,
Â  Â  defaultValue: 10, // Default to 10 classes if not specified
Â  },
Â  TrainerId: {
Â  Â  type: DataTypes.INTEGER,
Â  Â  allowNull: true,
Â  Â  references: {
Â  Â  Â  model: "Users", Â // Your User model's table name
Â  Â  Â  key: "id",
Â  Â  },
Â  },
});

// Assuming you have defined associations in separate files or in index.js for other models (like Class, Enrollment, User)
// If not, you might need to manually add them here to resolve controller includes:
/*
Course.associate = function(models) {
    Course.hasMany(models.Class, { as: 'classes', foreignKey: 'CourseId' });
    Course.hasMany(models.Enrollment, { as: 'courseEnrollments', foreignKey: 'courseId' });
    Course.belongsTo(models.User, { as: 'trainer', foreignKey: 'TrainerId' }); // Already covered by TrainerId reference
};
*/

Course.hasMany(CoursePriceOption, { as: "priceOptions", foreignKey: "courseId" });
CoursePriceOption.belongsTo(Course, { foreignKey: "courseId" });

module.exports = Course;